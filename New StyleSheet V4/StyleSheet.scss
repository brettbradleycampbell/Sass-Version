//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//IMPORT FONT
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	@import url(http://fonts.googleapis.com/css?family=Roboto:400,700);
	
	// * {
	// 	-webkit-font-smoothing: antialiased;
	// }
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//CONDITIONALS
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	//LOGO
	$interchangeable-logo: T;

	//LAYOUT
	$full-width-header: F;
	$boxed-skincontent: F;
	$pushed-to-bottom-plug: T; // -- BOOKMARK: Don't want to change, probably.
		$boxed-questions-new: F; //BOOKMARK: Do we want this or not?

	//BACKGROUND
	$body-background-image-on: T;
	$overlay-dark: T;

	//BORDER RADIUS - Labels, TextEntry, Buttons, Survey Container
	$border-radius-on: T; //Do we ever want this False?

	//BOX SHADOW (SkinContent or SkinInner and Full-width LogoContainer)
	$question-container-box-shadow-on: T;

	//RADIO BUTTONS
	$radio-buttons: T;

	//LABEL STYLE
	$label-style: 2; 
		// STYLE 1: Outline, 2px border-radius		// BOOKMARK: Style 1 only used for "Minimal" layout - plain white/gray background
		// STYLE 2: No border, 4px border-radius
		$full-width-labels-on: F; //BOOKMARK: we should just pick one or the other.

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//VARIABLES
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	--> // indicate common changes or variables/elements to double check. 

	//COLOR PALETTE
	-->	$primary-color: #F06F6F; //007FC2 //39E79B //F06F6F //4b86ee
	$primary-hue: hue($primary-color);
	$primary-hue-color-light: hsl($primary-hue, 100%, 95%);
	$desaturated-primary-color: desaturate($primary-color, 20%);
	// Function to change text color based on background color
	@function set-reverse-text-color($primary-color) {
	  @if (lightness($primary-color) > 70%) or (lightness($primary-color) > 30%) and (hue($primary-color) > 45) and (hue($primary-color) < 80) {
	    @return darken($primary-color, 70%); 
	  } @else {
	    @return white; 
	  }
	}
	//This color is calculated in fucntion above, or enter manually.  
	--> $reverse-primary-text-color: set-reverse-text-color($primary-color);
	$link-color: #4b86ee;


	//SURVEY ENGINE BODY - BACKGROUND
	$body-background-color: $primary-color;
	--> $body-background-image: url(https://s.qualtrics.com/ControlPanel/Graphic.php?IM=IM_cOnSH9l3PPJjFmR&V=1410189252);
	// Change to "auto" and "repeat" for repeating background images
	$body-background-size: cover; 
	$body-background-repeat: no-repeat; 
	$body-background: #FFF $body-background-image $body-background-repeat center fixed; // Light background color for light image
	@if $overlay-dark == T {
		$body-background: #555 $body-background-image $body-background-repeat center fixed; // Dark background color for dark image
	}
	
	//WRAPPER OVERLAY
	//BOOKMARK: If we add an overlay to the image, we need to remove this overlay
	$wrapper-background-overlay-dark: url(dark.png); 	//BOOKMARK: need to use an image for this to work in IE8-
	$wrapper-background-overlay-light: url(light.png);

	//DEFAULT - 
	//WIDTH and PADDING
	$container-max-width: 900px; // 770px - 1080px is a normal range
	$default-container-padding: 30px;
	$default-mobile-container-padding: 15px;
	$skin-inner-max-width: $container-max-width;
	//FONT
	--> $font-stack: "Roboto", "Helvetica", Arial, sans-serif;
	$default-font-size: 18px; // Try to make this consistent with $default-container-padding above.
	$default-text-color: #54575F;
	@if $boxed-skincontent == F and $body-background-image-on == T { // = background image
		@if $overlay-dark == T {
			$default-text-color: #FFF; // Changes default-text-color for dark background images	
		} @elseif $overlay-dark == F {
			$default-text-color: #333; // Changes default-text-color for light background images	
		}
	}
	//BORDER
	$default-border-width: 1px;
	@if $label-style == 2 {
		$default-border-width: 2px;
	}
	$default-border-style: solid;	
	$default-border-color: #ccc;
	@if $boxed-skincontent == F and $body-background-image-on == T { // = background image
		@if $overlay-dark == F {
			$default-border-color: lighten($default-text-color, 20%);
		} @elseif $overlay-dark == T {
			$default-border-color: #ccc;				
		}
	}
	$default-border-radius: 2px;
	@if $label-style == 2 {
		$default-border-radius: 4px;
	}
	$default-border: $default-border-width $default-border-style $default-border-color;
	
	//QUESTION CONTAINER
	$question-container-background-color: #FFF; //I think this should never be anything but white, for now at least.
	$container-box-shadow-x: 0;
	$container-box-shadow-y: 0;
	$container-box-shadow-spread: 15px;
	$container-box-shadow-color: rgba(0,0,0,.3); //Can't use box-shadow on IE8 anyway, so might as well do rgba

	//READABLE / ALT / HOVER
	$readable-hover-color: darken($question-container-background-color, 4%);
	$readable-hover-backup: darken($question-container-background-color, 4%);
	@if $boxed-skincontent == F and $body-background-image-on == T {
		@if $overlay-dark == T {
			$readable-hover-backup: #555; //Backup color for IE8
			$readable-hover-color: rgba(255,255,255,.1);
		} @elseif $overlay-dark == F {
			$readable-hover-backup: #DDD; //Backup color for IE8
			$readable-hover-color: rgba(0,0,0,.2);				
		}
	}

	//SKIN INNER

	//LOGO CONTAINER
	$logo-container-background: #FFF;

	//LOGO
	$logo-background-color: transparent; //If we're going to add a color here, we need to include the same border-radius, or make it transparent for full-width-header == F;
	-->	$logo-image-width: 180px;
	-->	$logo-image-height: 64px;
	$logo-padding: 20px; 
	$logo-width: $logo-image-width;
	$logo-height: $logo-image-height + ($logo-padding * 2);
	$logo-mobile-scale: .66;
	$logo-mobile-width: ($logo-image-width * $logo-mobile-scale);
	$logo-mobile-height: ($logo-image-height * $logo-mobile-scale);
	$logo-max-width: $container-max-width + ($default-container-padding * 2.5); //2.5? There's almost always some padding around the logo in the image file.  Good idea or not?
	@if $boxed-skincontent == F and $full-width-header == T {
		$logo-max-width: $container-max-width + ($default-container-padding); //Better to have it too far out than too far in.  In my opinion.
	}
	-->	$logo-image: url("logo2.png");
	--> $logo-mobile-image: url("logo2.png");

	$logo-position: $default-container-padding center; // So it doesn't touch the edge
	$logo-mobile-position: center center;
	$logo-mobile-padding: ($logo-padding * $logo-mobile-scale);

	//HEADER CONTAINER

	//HEADER
	$header-font-size: $default-font-size;
	$header-max-width: $container-max-width + ($default-container-padding * 2);
		@if $boxed-skincontent == F and $full-width-header == T {
			$header-max-width: $container-max-width + ($default-container-padding * .5);
		}
	$header-padding: 10px $default-container-padding;
		@if $full-width-header == T and $interchangeable-logo == F {
			$header-padding: 0 $default-container-padding 20px $default-container-padding; 
		}
	$header-text-color: $default-text-color;

	//SKIN CONTENT
	$skin-content-border: 0px $default-border-style darken(#FFFFFF, 10%);  //BOOKMARK: Do we want this here or at all? 
	$skin-content-border-radius: $default-border-radius;

	//VALIDATION ERROR MESSAGE
	// == R
	$error-red-background: #FFD7D7;
	$error-red-color: #E73F61;
	// == O
	$error-orange-background: #FFDAAB;
	$error-orange-color: #D66D31;
	// == B
	$error-blue-background: #C0E1FF;
	$error-blue-color: #3180D6;
	-->	$error-color: R;
	--> $highlight-color: $error-red-color;

	//QUESTIONS
	--> $question-text-font-size: ($default-font-size + 3);
	$question-text-color: $default-text-color;
	$question-body-font-size: $default-font-size;
	$question-body-text-color: $default-text-color;

	//OPTIONAL LABEL STYLES
	//SELECTED STATE
	$answer-label-select-background: $primary-color;
	$answer-label-select-color: $reverse-primary-text-color;
	//STYLE 1
	$answer-label-background: transparent;
	$answer-label-border: 1px solid $default-border-color; // Customers4 style
	//STYLE 2
	$answer-label-background-2: #eee; //For white background
	$answer-label-background-2-transparent-dark: rgba(0,0,0,.1); //For light image/color backgrounds
	$answer-label-background-2-transparent-light: rgba(255,255,255,.1); //For dark image/color backgrounds
	$answer-label-border-2: none;

	//PROGRESS BAR
	$progress-bar-background-color: $primary-hue-color-light;
	$progress-bar-fill-color: darken($desaturated-primary-color, 10%);
	$progress-bar-font-size: 14px;
	$progress-bar-fill-height: $progress-bar-font-size + 2px;

	//BUTTONS
	$button-primary-color: $primary-color;
	$button-text-color: $reverse-primary-text-color;
	$button-font-size: $default-font-size;
	$button-padding: 8px 20px;
	$buttons-container-padding: $default-container-padding;

	//FOOTER CONTAINER
	$footer-container-background: transparent; //BOOKMARK: Probably OK to just leave this off.  Originally used it to calculate color of footer text.

	//FOOTER
	$footer-font-size: ($default-font-size - 4);
	$footer-padding: $default-container-padding;
	-->	$footer-text-color: $default-text-color; //BOOKMARK: We could figure out a way to calculate this.  For now, $default-text-color, or manually update. 

	//PLUG
	$plug-font-size: $footer-font-size;
	$plug-padding: 12px 24px;
	$plug-link-color: #FFF;
	$plug-background: rgba(0,0,0,.3);
	$plug-background-hover: rgba(0,0,0,.4);
	// $calculated-sticky-footer-height: $footer-font-size + 10 * 2 +5; //BOOKMARK: I think we should make this one size fits all.  It's causing problems. 
	$calculated-sticky-footer-height: 40px;

//FIND A HOME for these
	$slider-handle-color: $primary-color;
	$slider-bar-color: #DDD;
	@if $body-background-image-on == T and $boxed-skincontent == F and $overlay-dark == F {
		$slider-bar-color: #505457;
	}

	$answer-label-spacing: 10px;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//IMPORT BaseStyles
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	// import latest BaseStyles.scss version
	/* BaseStylesV4 */
	@import '_BaseStylesV4.scss';

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//MIXINS
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	//BORDER RADIUS
	@mixin border-radius($border-radius-size) {
		-webkit-border-radius: $border-radius-size;
		   -moz-border-radius: $border-radius-size;
			-ms-border-radius: $border-radius-size;
		     -o-border-radius: $border-radius-size;
				border-radius: $border-radius-size;
	}

	//BOX SHADOW
	@mixin box-shadow($x, $y, $size, $color) {
		-webkit-box-shadow: $x $y $size $color;
		   -moz-box-shadow: $x $y $size $color;
			    box-shadow: $x $y $size $color;
	}

	//LINEAR GRADIENT // -- Not using this anywhere, but good to keep around I guess. 
	@mixin linear-gradient($top, $bottom) {
		background: $top;
		background: -moz-linear-gradient(top,  $top 0%, $bottom 100%);
		background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$top), color-stop(100%,$bottom));
		background: -webkit-linear-gradient(top,  $top 0%,$bottom 100%);
		background: -o-linear-gradient(top,  $top 0%,$bottom 100%);
		background: -ms-linear-gradient(top,  $top 0%,$bottom 100%);
		background: linear-gradient(to bottom,  $top 0%,$bottom 100%);
	}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// LAYOUT ELEMENTS
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

@if $pushed-to-bottom-plug == T {
	@media only screen and (min-device-width: 400px) { // BOOKMARK: Added this media query to fix scrolling QuestionBody on mobile issue.  Also needed for .RO .DND to properly rank
		//Needed for Sticky Footer Plug - Do Not Remove
		.JFE, .JFEContent,
		html, body, #Page, .Skin {
			height: 100%;
		}
	}
}

a {
	color: $link-color;
}

#SurveyEngineBody {
	@if $body-background-image-on == T {
		background: $body-background;
		background-size: $body-background-size;
	} @else {
		background: $body-background-color;
	} 
	// // BOOKMARK: We were going to limit this option to white or gray, but now we might do color background too.  
	// @if $body-background-image-on == F and $boxed-skincontent == F {
	// 	//BOOKMARK: This could be white or gray?
	// 	background: #FFF;
	// }
	font-family: $font-stack;
}

// Welcome Back! Message at top of screen
#RestoredResponseBar {
	background: #45464b !important; // Does this pull the color from the "Highlight Questions" option? -- No, it doesn't, I checked.
	color: #888c8f !important;
	a {
		color: $link-color !important;
	}
}
#RestoredResponseBar .BottomShadow {
	display: none;
}

.Skin {

	#Wrapper{
		@if $pushed-to-bottom-plug == T{
			//These styles needed for Sticky Footer Plug - Do Not Remove
			min-height: 100%;
			height: auto !important; 
			height: 100%;
			margin: 0 auto (-$calculated-sticky-footer-height);
		}
	}

	#Overlay {
		position: fixed;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		z-index: -9;
		@if $body-background-image-on == T and $boxed-skincontent == F {
			@if $overlay-dark == T {
				background: $wrapper-background-overlay-dark;
			} @elseif $overlay-dark == F {
				background: $wrapper-background-overlay-light;
			}
		}
	}

	#ProgressBar {
		font-size: $progress-bar-font-size;
		// padding: 0; // Do we even need this? Don't think so. 
		position:relative;
	}

	.ProgressBarContainer{
		width:100%;
		border-collapse:collapse;
		//have to add these borders or there is a 1px space to right and left when the 0% and 100% tds are gone -- remove if we can figure out a better way
		border-right: 4px solid $progress-bar-background-color;
		border-left: 2px solid $progress-bar-fill-color;
	}
	
	#ProgressBar tr td:nth-child(1) {
	  position: absolute;
	  left: 0;
	  color: $progress-bar-fill-color;
	  line-height: $progress-bar-fill-height;
	  border-left: 2px solid $progress-bar-fill-color;
	  width: 100%;
	  &:empty {
	  	display: none;
	  }
	}
	
	#ProgressBar tr td:nth-child(2){
		width:100%;
	}
	
	#ProgressBar tr td:nth-child(3) {
	  position: absolute;
	  right: 0;
	  line-height: $progress-bar-fill-height;
	  color: $progress-bar-fill-color;
	  &:empty {
	  	background: blue;
	  }
	}

	.ProgressBarFillContainer {
		border: none;
		overflow:hidden;
		background:$progress-bar-background-color;
		width:100%;
	}

	.ProgressBarFill {
		background-color: $progress-bar-fill-color;
		height: $progress-bar-fill-height;
	}
	
	.Skin .LanguageSelectorContainer {
		margin: $default-container-padding;
		margin-bottom: 0;
		text-align: right;
	}
	
	.SkinInner {
		@if $full-width-header == F { // The SkinInner acts as the SkinContent (the "white box") in this case
			max-width: $skin-inner-max-width;
			margin: ($default-container-padding * 2) auto;
			background: $question-container-background-color;
			@if $boxed-skincontent == F {
				background: transparent;
				margin: 0 auto;
			} @elseif $boxed-skincontent == T {
				@if $question-container-box-shadow-on == T {
					@include box-shadow($container-box-shadow-x, $container-box-shadow-y, $container-box-shadow-spread, $container-box-shadow-color);
				}
				@if $border-radius-on == T {
					@include border-radius($default-border-radius * 2);
				}	
			}
		}
		@media only screen and (max-width: 767px) {
			margin: 0 auto !important;
			max-width: $container-max-width;
			@include border-radius(0);
		}

	}

	#LogoContainer {
		background: $logo-container-background;
		@if $full-width-header == F {
			max-width: ($skin-inner-max-width + ($default-container-padding * 2));
			margin:0 auto;
			background: transparent;
		}
		@if $full-width-header == T and $question-container-box-shadow-on == T {
			@include box-shadow($container-box-shadow-x, $container-box-shadow-y, $container-box-shadow-spread, $container-box-shadow-color);
		}
	}

	@if $interchangeable-logo == F {
		#Logo  {
			background: $logo-background-color $logo-image no-repeat $logo-position;
			background-size: $logo-image-width $logo-image-height;
			height: $logo-height;
			max-width: $logo-max-width;
			@media only screen and (max-width: 767px) {
				background: $logo-background-color $logo-mobile-image no-repeat $logo-mobile-position;
				background-size: $logo-mobile-width $logo-mobile-height;
				height: $logo-mobile-height + $logo-padding;
			}

			@if $full-width-header == T {
				margin: 0 auto;
			}
		} 
	} @elseif $interchangeable-logo == T {
		#Logo {
			display:none;
		}
	}

	#HeaderContainer {
		@if $full-width-header == F {
			max-width: ($skin-inner-max-width + ($default-container-padding * 2));
			margin: 0 auto;
		}
		@if $full-width-header == T {
			background: $logo-container-background;
			@if $boxed-skincontent == T {
				margin-bottom: ($default-container-padding * 2);
			} @elseif $boxed-skincontent == F {
				margin-bottom: ($default-container-padding);
			}
		}
		@media only screen and (max-width: 767px) {
			text-align: center;
		}
	}

	#Header {
		font-size: $header-font-size;
		color: $header-text-color;
		@if $full-width-header == T and $boxed-skincontent == F { // Because the default-text-color is often white in this case
			color: $primary-color; 
		}
		margin: 0px auto;
		max-width: $header-max-width;
		padding: $header-padding;
		@if $interchangeable-logo == T {
			padding: $logo-padding $default-container-padding; // the Header acts as the Logo
		}
		@if $interchangeable-logo == F or $interchangeable-logo == T and $boxed-skincontent == T {
			&:empty {
				padding: 0; // wahoo!  This makes the padding go away if there's no text.  Not for IE8-.  
			}
		} 
		@if $interchangeable-logo == T and $boxed-skincontent == T {
			padding: $default-container-padding $default-container-padding ($default-container-padding / 2) $default-container-padding;
		}
	}

	#SkinContent {
		border: $skin-content-border;
		max-width: $skin-inner-max-width;
		margin: 0 auto;

		@if $full-width-header == T { // Only in this scenario is the SkinContent the "white box," Otherwise it's the SkinInner
			@if $boxed-skincontent == T {
				background: $question-container-background-color;
				@if $border-radius-on == T {
					@include border-radius($default-border-radius * 2);
				}	
				@if $boxed-skincontent == T and $question-container-box-shadow-on == T{
					@include box-shadow($container-box-shadow-x, $container-box-shadow-y, $container-box-shadow-spread, $container-box-shadow-color);
				}
			}
		}
		@media only screen and (max-width: 767px) {
			border: none;
			@include border-radius(0);
		}
	}

	#Questions {
		overflow: auto; // Prevents the Validation Error Message from touching to top (previously used: padding-top: 1px;)
	}

	@if $boxed-questions-new == T {
		.QuestionOuter {
			border: $default-border;
			margin: 0 $default-mobile-container-padding;
			@include border-radius($default-border-radius);
		}
	}

	.QuestionOuter .Inner {
		// Need these so we can add a border to the "highlighted" questions
		border: $default-border; 
		border-color: transparent;
	}

	.QuestionText {
		font-size: $question-text-font-size;
		color: $question-text-color;
		padding: $default-container-padding;
		@media all and (max-width: 768px) {
			padding: $default-mobile-container-padding;
		}
		@if $boxed-questions-new == T {
			border-bottom: $default-border;
		}
	}

	.QuestionBody {
		color: $question-body-text-color;
		font-size: $question-body-font-size;
		overflow-y:hidden;  // this allows the QuestionBody to scroll independently of the QuestionText
		padding: $default-container-padding;
		padding-top: ($default-container-padding / 2);
		position:relative;//added for /*new radio position absolute z -1*/ so the quesiton doesn't jump when clicking - needs to be here for overflowing questions
		@media all and (max-width: 768px) {
			padding: $default-mobile-container-padding;
		}
	}

	.DB .TB .QuestionBody {
		padding: 0;	//This removes the padding from the nonexistent .QuestionBody on Descriptive Text questions.
	}

	// BOOKMARK: Side scrolling still needs testing
	// Allows QuestionText to wrap, and QuestionBody to scroll left to right on mobile.
	@-moz-document url-prefix() { // BOOKMARK: Removed this media query because this wasn't working in Firefox (which was the point), but then tested in IE and it causes problems
	   fieldset {
	       display: table-cell; //this is added so that it doesn't break in IE - Test in IE
	       // This makes a lot of questions not 100% width when they should be in IE (like MAHR, SAHR, .FORM, SLIDERS, etc.)
	   }
	}
	fieldset {
		width:100%;
		min-width:0;
		max-width:none;
	}
	// Thanks, Cory.

	#Buttons {
		// I think this margin helps make it not look stupid with just one question on the page.
		// And just looks better in general, maybe.
		margin-top: 80px;	
		padding: $buttons-container-padding;
		text-align:right;
		@media only screen and (max-width: 768px) {
			padding: $default-mobile-container-padding;
		}
		&:empty {
			margin-top: 0;
			padding: 0;
		}
	}

	#Buttons #PreviousButton {
		float: left;
	}

	#Buttons #NextButton, #Buttons #PreviousButton {
		@if $label-style == 1 {
			border: $default-border;
			background-color: transparent;
			color: $default-text-color;
		} @else if $label-style == 2 {
			border: none;
			background-color: $button-primary-color;
			color: $button-text-color;
		}
		@include border-radius($default-border-radius);
		cursor: pointer;
		font-size: $button-font-size;
		margin: 0px;
		padding: $button-padding;
		text-align: center;
		text-decoration: none;
		-webkit-appearance: none;
		transition: background .3s;
		&:focus {
			outline: none;
		}
		@media only screen and (min-device-width: 1025px) { // Don't want hover state to apply to touch devices <= iPad landscape (1024px)
			@if $label-style == 1 {
				&:hover {
					background: $primary-hue-color-light;
					border-color: darken($primary-hue-color-light, 20%);
					color: $primary-color;
				}
				&:active {
					background: darken($primary-hue-color-light, 5%);
				}
			}
			@if $label-style == 2 {
				&:hover {
					background: darken($primary-color, 8%);
				}
				&:active {
					//background-color: rgba(0,0,0,.2);
					background: darken($primary-color, 15%);
				}
			}
		}
	}
	#Footer {
		color: $footer-text-color;
		font-size: $footer-font-size;
		max-width: $container-max-width;
		margin: 0px auto;
		padding: $footer-padding;
	}

	#PushStickyFooter{
		//Needed for Sticky Footer Plug - Do Not Remove
		height:$calculated-sticky-footer-height;
	}
	
	#Plug {
		float:right;
		a {
			font-size: $plug-font-size;
			color: $plug-link-color;
			text-decoration: none;
			padding: $plug-padding;
			background: darken($body-background-color, 10%);
			background: $plug-background;
			-webkit-transition: background .3s;
			text-align: center;
			height: $calculated-sticky-footer-height;
			@if $border-radius-on == T{
				@media all and (min-width: 767px) {
					@include border-radius(5px 0 0 0);
				}
			}			
			&:hover {
				background: $plug-background-hover;
			}
		}
		@media only screen and (max-width: 767px) {
			float:none;
			a {
				width:100%;
			}
		}
	}

	// Still inside .Skin

	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// QUESTION TYPES, etc. STYLES
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	// Styles for html elements that don't automatically style
	button, input, select, textarea {
		font-family: $font-stack;
		font-size: $default-font-size;
		color: $default-text-color;
	}

	input.TextEntryBox, 
	.TE textarea, 
	textarea, 
	input[type="password"], 
	input[type="text"], 
	input[type="search"],
	select {
		border: $default-border;
		@if $border-radius-on == T {
			@include border-radius($default-border-radius);
		}
		padding: 4px; // If we add too much padding, it cuts off the text (with box-sizing: border-box). Probably stick with 4px or less.
		//BOOKMARK: max-width: 100% causes problems in IE8 (the text inputs shrink down to "100%" of the td they are in)
		// max-width: 100%;

		//Figure out the best way to make text inputs not spill over on mobile.  
		// Can't just indiscriminately apply 100% !important because some are set to 3em or whatever (on purpose)
		// @media only screen and (max-width: 768px) {
		// 	width: 100%;
		// }
		@if $body-background-image-on == T and $boxed-skincontent == F and $overlay-dark == T or $default-text-color == #FFFFFF {
			background: transparent;
			//Can't be white, or it won't show up in some Firefox or IE select menus.
			color: #CCC;
		} 

		&:focus {
			// These inputs need a border, otherwise the focus class will be nonexistent (bad for accessibility)
			border-color: $primary-color;
			outline: none;
		}
	}

	.TE textarea, textarea {
		padding: 8px; // Give these a little extra padding. 
		max-width: 100%; 
	}

	@media only screen and (max-width: 767px) {

		.MC .TextEntryBox	{
			width: 100% !important;
		}

	}

	// BOOKMARK: How can I make it not touch the top of the #Questions without adding padding to #Questions?
	.HeaderValidationError {
		margin: $default-container-padding;
		padding: 15px;
		@if $border-radius-on == T {
			@include border-radius($default-border-radius);
		}
		@if $error-color == O {
			background: $error-orange-background;
			color: $error-orange-color;
		} @elseif $error-color == R {
			background: $error-red-background;
			color: $error-red-color;
		} @elseif $error-color == B {
			background: $error-blue-background;
			color: $error-blue-color;
		}
		@media only screen and (max-width: 768px) {
			margin: $default-mobile-container-padding;
		}
	}
	.ValidationError {
		font-size: $question-text-font-size;
		font-weight: bold;
		text-align: center;
		@if $boxed-skincontent == F {
			padding: 0 0 10px 0;
			@if $error-color == O {
				color: $error-orange-color;
			} @elseif $error-color == R {
				color: $error-red-color;
			} @elseif $error-color == B {
				color: $error-blue-color;
			}
		} @elseif $boxed-skincontent == T {
			padding: 10px 0 0 0;
			@if $error-color == O {
				background: lighten($error-orange-background, 4%);
				color: $error-orange-color;
			} @elseif $error-color == R {
				background: lighten($error-red-background, 4%);
				color: $error-red-color;
			} @elseif $error-color == B {
				background: lighten($error-blue-background, 4%);
				color: $error-blue-color;
			}
		}
	}
	.HeaderValidationError h1 {
		font-size: 120%;
	}
	.HeaderValidationError li a{
		color:$error-color;
		@if $error-color == O {
			color: $error-orange-color;
		} @elseif $error-color == R {
			color: $error-red-color;
		} @elseif $error-color == B {
			color: $error-blue-color;
		}
	}

	.QuestionOuter.Highlight .Inner {
		// background-color: $highlight-color;
		border-color: $highlight-color;
		@include border-radius($default-border-radius);
		// margin: 0 $default-container-padding;
		// margin-bottom: ($default-container-padding / 2);
		@media only screen and (max-width: 768px) {
			margin: 0 $default-mobile-container-padding;	
		}
		@if $boxed-skincontent == T {
			border-color: transparent;
			@if $error-color == O {
				background: lighten($error-orange-background, 4%);
			} @elseif $error-color == R {
				background: lighten($error-red-background, 4%);
			} @elseif $error-color == B {
				background: lighten($error-blue-background, 4%);
			}
			@include border-radius(0);
		}
	}


	.EndOfSurvey {
		color: $question-text-color;
		padding: 60px 30px;
	}

	.Separator {
		height: $default-border-width;
		background: $default-border-color;
		margin: 10px $default-container-padding;
		@media only screen and (max-width: 768px) {
			margin: 5px $default-mobile-container-padding;
		}
	}

	//Readable, LightText, Highlight
	.LightText{
		color:lighten($default-text-color, 15%);
	}

	// Readable Hover state (rather than ReadableAlt class)
	@media only screen and (min-width: 767px) {
		.ChoiceRow,
		.Choice,
		.RO .RB tr,
		.CS .VRTL li {
			-webkit-transition: background .3s;
			&:hover {
				background: $readable-hover-backup; //backup for IE8
				background: $readable-hover-color;
			}
		}
		// Remove this for these question types, because it looks weird. 
		.RO .RB tr.Answers,
		.Matrix .Bipolar tr,
		.Matrix .Profile tr {
			background: inherit;
		}
	}

	////////////////////////////////////////////////////////////////////
	// Pick Group & Rank / Rank Order
	////////////////////////////////////////////////////////////////////
	.PGR .DragAndDrop td.groupsContainerTd div > div {
		border: $default-border;
		@include border-radius($default-border-radius);
		margin: 5px;
	}
	.PGR .DragAndDrop h2 {
		font-size: $default-font-size + 2px;
	}
	.PGR .DragAndDrop .Group h2 {
		border-bottom: $default-border;
		padding: 10px;
		background: darken($question-container-background-color, 3%);
		@if $body-background-image-on == T and $boxed-skincontent == F {
			@if $overlay-dark == T {
				background: transparent;
			} @elseifi $overlay-dark == F {
				background: #FFF;
			}

		}
	}
	.RO .DND .rank,
	.PGR .DragAndDrop .rank{
		padding: 0px 10px;
		margin: 7px 0;
		left: 4px;
		@if $border-radius-on == T {
			@include border-radius(40px);
		}
		background-color: $primary-color;
		color:$reverse-primary-text-color;
		@if $label-style == 1 {
			border: 1px solid $primary-color;
			background: transparent;
			color: $primary-color;
		}
	}
	.RO .DND ul.Edited .rank,
	.RO .DND ul.NotEdited li:hover .rank,
	.RO .DND .rank {
		background:$primary-color;
		color:$reverse-primary-text-color;
	}
	.PGR .DragAndDrop .Group div {
		// makes it so the ul and lis don't spill over
		-moz-box-sizing: content-box;
		box-sizing: content-box;
	}
	.PGR .DragAndDrop .stack ul li.stack {
		border: $default-border;
		@if $border-radius-on == T {
			@include border-radius($default-border-radius);
		}
		@if $default-text-color == #FFF {
			color: #444;  // this is so the "items" show up if the default text color is white.  

		}
	}
	.RO .DND .Items ul li,
	.PGR .DragAndDrop .Items ul li{
		padding: 8px 0;
		text-align: center;
		@if $border-radius-on == T {
			@include border-radius($default-border-radius);
		}
	}
	.RO .DND .Group ul li,
	.PGR .DragAndDrop ul li {
		padding: 8px 40px;
		text-align: center;
		&:hover {
			background: $readable-hover-backup; //backup for IE8
			background: $readable-hover-color;
		}
	}
	.PGR .DragAndDrop ul li.stack {
		&:hover {
			background: #fff; // Change the hover state for the white "stacked" ones
		}
	}
	.PGR .DragAndDrop .NoColumns td.groupsContainerTd div > div {
		margin: 0 auto 10px auto; //Not sure we need this... seems like we want the group boxes close to the items 
	}
	@media all and (max-width: 768px) { 
		.CS .HR li,
		.RO .HR li {
			float: none; // Don't want the text entry ones to be on the same line on mobile.
		}
	}
	@media all and (min-width: 767px) {
		.CS .HR li,
		.RO .HR li {
			margin: $default-container-padding / 2;
		}
	}
	.RO .DND ul li {
		padding: ($default-container-padding / 2) 0;
		@if $border-radius-on == T {
			@include border-radius($default-border-radius);
		}
	}
	.RO .DND ul li .rank {
		margin: 0 10px;
	}
	//BOOKMARK:
	//THESE WERE ADDED SO THE LIs are always visible, but it may break something...?  It did.. found it with Cory, but can't remember what it was. 
	.QuestionOuter.RO {
		overflow-y: visible;
	}
	.QuestionOuter.RO .DND .QuestionBody {
		overflow-y: visible;
		overflow-x: visible !important;
	}
	//
	//Rank Order - Radio Button
	.RO .RB .ChoiceStructure td {
		padding: ($default-container-padding / 2) inherit;
	}
	.RO .DND ul li:hover{
		background: $readable-hover-backup; //backup for IE8
		background: $readable-hover-color;
	}

	////////////////////////////////////////////////////////////////////
	// Constant Sum
	////////////////////////////////////////////////////////////////////
	.CS .ChoiceStructure li {
		padding: $default-container-padding / 2;
	}
	.CS .VRTL .SumInput input,
	.CS .VRTL .SumTotal input {
		margin-top: $default-container-padding / 3;	//This is to vertically center the inputs in Constan Sum.  Not always perfect.  
	}
	.CS .CSTotal,
	.CS .Total {
		background: $readable-hover-backup;
		background: $readable-hover-color;
	}	
	//Rank Order/Constant Sum inputs -- Center the number
	.Matrix .TE .Short td input, .Matrix .TE .Medium td input, .Matrix .TE .Long td input, .SBS .InputText, .CS input.SumInput, .CS .SumInput input.InputText, .CS .SumTotal input, .RO .RankInput {
		text-align: center;
	}

	////////////////////////////////////////////////////////////////////
	// Slider
	////////////////////////////////////////////////////////////////////
	.horizontalbar .Slider .track {
		background-color: $slider-bar-color; //BOOKMARK: what's a good way to make the area around the slider selectable, without having to use an image
	}
	.horizontalbar th.ylabel {
		padding:($default-container-padding / 2);
	}
	.horizontalbar tr.Stars td.value input,
	.horizontalbar table.sliderGrid tr td.value input {
		width: 4em;
		border: $default-border; // This is so the focus class can apply a color border
		border-color: transparent;
	}
	//Draggable Bar
	.horizontalbar .bar{
		background-color: $slider-bar-color;
		@include border-radius($default-border-radius);
	}
	.HBAR .trackHolderRel .track {
		border: $default-border;
			@include border-radius(2px);
	}
	.HBAR .trackHolderRel.activated .track {
		border-color: darken($slider-handle-color, 10%);
	}
	//Graphic Slider
	.SS .horizontalbar .SSTrack,
	.SS .verticalbar .SSTrack {
		margin: 20px !important;
		background-color: $slider-bar-color;
	}
	.horizontalbar .activated .bar,
	.horizontalbar .BarContainer:hover .bar,
	.SS .horizontalbar .handle,
	.horizontalbar .Slider .handle,
	.SS .verticalbar .SSTrack .handle{
		background: $slider-handle-color;
	}
	.SS .horizontalbar .handle:hover,
	.horizontalbar .Slider .handle:hover {
		background-color: $primary-color;
		padding: 10px;
	}

	////////////////////////////////////////////////////////////////////
	// Text Entry
	////////////////////////////////////////////////////////////////////
	.TE .FORM table {
		width: 100%;
	}
	.TE .ControlContainer {
		width: 50%; //Mobile
	}
	.TE .FORM .LabelWrapper {
		text-align: left;
	}
	@media all and (max-width: 768px) {
		.TE .FORM input.InputText {
			width: 100% !important; // Mobile
		}
	}	
	@media all and (min-width: 768px) {
		.TE .FORM span.LabelWrapper {
			padding-right: 1em;
		}
		.TE .ControlContainer {
			width: 75%;
		}
	}
	.TE textarea {
		width: 100%;
	}

	////////////////////////////////////////////////////////////////////
	// Dropdown
	////////////////////////////////////////////////////////////////////
	.Matrix .DL table td.last{
		padding-right: $default-container-padding / 2;
		text-align: right;
	}

	////////////////////////////////////////////////////////////////////
	// Select Box
	////////////////////////////////////////////////////////////////////
	.SB input {
		background: $button-primary-color;
		color:$button-text-color;
		@if $border-radius-on == T {
			@include border-radius($default-border-radius);
		}
		padding: 4px 12px;
		border: none;	
		border: $default-border;
		border-color: $button-primary-color;
		-webkit-appaerance: none;
	}

	////////////////////////////////////////////////////////////////////
	// Matrix
	////////////////////////////////////////////////////////////////////
	.RO .RB th,
	.SBSMatrix th,
	.Matrix th {
		padding: $default-container-padding / 2;
	}

	.Matrix .TE td input {
		margin: 2px; // This keeps the long .TE inputs from touching each other.
	}

	// // BOOKMARK: TEST STYLES
	// .Matrix .Profile .MultipleAnswer table th.c1 {
	// 	background: $primary-color;
	// 	color: #fff;
	// 	text-align: right;
	// }
	// .Matrix .Profile .MultipleAnswer table th {
	// 	background: #ddd;
	// }

	// .Matrix .Profile .MultipleAnswer table tr:first-child th.c1 {
	// 	border-radius: $default-border-radius 0 0 0;
	// }

	// .Matrix .Profile .MultipleAnswer table tr:nth-last-child(2) th.c1 {
	// 	border-radius: 0 0 0 $default-border-radius;
	// }

	////////////////////////////////////////////////////////////////////
	// NPS
	////////////////////////////////////////////////////////////////////
	@if $radio-buttons == T { // Prevent radio buttons from riding up
		.NPS label.SingleAnswer {
			display: block;
		}
		.NPS td.LabelContatiner {
			text-align: center;
		}
		.NPS td.ControlContainer {
			position: relative;
			height: 30px; // (height + margin-top) of label.q-radio
			top: - 30px; // (height + margin-top) of label.q-radio
			//IE8-
			position: static\9;
		}
		// This is because these questions get extra space at the bottom for the invisible td.ControlContainer
		.NPS .QuestionBody {
			padding-bottom: 0;
		}
	}


} // /.Skin



// From Mark's New-Sass-Framework - - make questions break, etc.
// BOOKMARK: This change should be advertised.  
	
.Skin {

	//MC (MULTIPLE CHOICE) CLASS 
	.MC {

		.MAHR, .SAHR {

			@media all and (max-width: 768px) {

				td {
					display: block;
					width: 100%;

					//BOOKMARK: 
					// THIS OR THE ABOVE?
					// display: inline-block;
					// width: auto;
					// margin: ($answer-label-spacing / 2) !important;

				}
			}
		}

	}
}

  /////////////////////////////
 // START LABEL STYLES 		//
/////////////////////////////

// Need "No Radio Buttons" and "Styled Radio Buttons option"


	// .SingleAnswer & .MultipleAnswer are the actual labels (with text in them)
	// .q-radio & .q-checkbox are the labels that mimic the input

	// .q-radio/checkbox need to exist in both (just only in Matrix, etc. for the "No Radio Buttons" option)

/////////////////////////////
/////////////////////////////


// These q-radio/checkbox classes apply by default
// Then for "No Radio Buttons" option, the .MC .q-radio/checkbox labels are hidden

	// Default is to have "Styled" Radio Buttons
	// If $no-radio-buttons == T, then remove Radio Buttons for selected questions (mostly MC)

	/* Start Radio Buttons */
	.Skin label.q-radio,
	.Skin label.q-checkbox {
		@if $label-style == 1 {
			border: 1px solid $primary-color;
		} @elseif $label-style == 2 {
			border: 2px solid $primary-color;
		}
		display: inline-block;
		width: 20px;
		height: 20px;
		// BOOKMARK: // could do something like this... to make radio button match font size more??
		@if $default-font-size < 14px {
			width: 16px;
			height: 16px;
		}

		// Bring back native radio buttons and checkboxes for IE8-
		display: none\9;

	}
	.Skin label.q-radio {
		@include border-radius(100%); 	//Need to be circles
		&.q-checked {
			background-color: lighten($primary-color, 8%);
		}
	}
	.Skin label.q-checkbox {
		@if $border-radius-on == T {
			@include border-radius(2px);
		}
		&.q-checked {
			background-image: url(check.png);
			background-color: lighten($primary-color, 8%);
			background-size: 100%;
			background-position: center center;
			background-repeat: no-repeat;	
		}
	}

// Conditionals

//If radio buttons is TRUE - 
	// hide ALL radio button inputs
	// IE8 bring back ALL radio buttons
@if $radio-buttons == T {

	// /* Hides radio buttons and checkboxes */
	.Skin input[type="radio"],
	.Skin input[type="checkbox"] {
		position: absolute;
		//left: -9999px; //removed for /*new radio position absolute z -1*/ so the quesiton doesn't jump when clicking
		opacity:0;//added for /*new radio position absolute z -1*/ so the quesiton doesn't jump when clicking
		z-index:-1;//added for /*new radio position absolute z -1*/ so the quesiton doesn't jump when clicking
		height:0;
		width:0;

		// Bring back native radio buttons and checkboxes for IE8-
		position:relative\9;
		opacity:1\9;
		z-index:1\9;
		height:inherit\9;
		width:inherit\9;	
	}


//OLD Conditional

	// Aligns the HR radio buttons vertically with each other
	.Skin .MC .MAHR .QuestionBody td.LabelContatiner,
	.Skin .MC .SAHR .QuestionBody td.LabelContatiner {
		vertical-align: bottom;
	}
	// Puts the "input" labels below the answer options on HR questions
	.Skin .MC .SAHR .QuestionBody td.LabelContatiner .LabelWrapper,
	.Skin .MC .MAHR .QuestionBody td.LabelContatiner .LabelWrapper {
		display: block;
		width: 100%;
	} 
	// This is to group the answer with the correct associated input on mobile..
	// Good idea? bad idea?
	@media only screen and (max-width: 768px) {

		.Skin .MC .MAHR .QuestionBody td.LabelContatiner,
		.Skin .MC .SAHR .QuestionBody td.LabelContatiner {
			border-bottom: 2px solid #eee;
			padding: 10px 0;
			&:last-child {
				border-bottom: none;
			}
		}
	}

	.Skin .ChoiceStructure li {
		padding: 10px 0;
	}

	.Skin .MC .SAVR label.q-radio,
	.Skin .MC .SAVR label.q-checkbox,
	.Skin .MC .MAVR label.q-radio,
	.Skin .MC .MAVR label.q-checkbox {
		float: left;
		margin-right: 10px;
		padding: 0;
	}
	.Skin .MC .MACOL .QuestionBody td.ControlContainer,
	.Skin .MC .SACOL .QuestionBody td.ControlContainer{
		padding: 10px;
	}
	.Skin .MC .SACOL .QuestionBody label.SingleAnswer,
	.Skin .MC .MACOL .QuestionBody label.MultipleAnswer {
		// should match the 10px above, for consistency
		padding: 10px 0;
	}

	// Because the "radio button" questions need different padding format
	.Skin .MC .QuestionBody {
		padding: $default-container-padding ($default-container-padding + 10px);
		padding-top: 0;
	}

	//BOOKMARK: 
	// test to make HR radio buttons more clickable.
	// by making td.ControlContainer positioned around the label.q-radio
	.Skin .MC .SAHR td.ControlContainer,
	.Skin .MC .MAHR td.ControlContainer {
		position: relative;
		height: 30px; // (height + margin-top) of label.q-radio
		top: - 30px; // (height + margin-top) of label.q-radio
		//IE8-
		position: static\9;
	}
	.Skin .MC .SAHR label.q-radio,
	.Skin .MC .MAHR label.q-checkbox {
		margin-top: 10px;
	}
	// This is because these questions get extra space at the bottom for the invisible td.ControlContainer
	.Skin .MC .SAHR .QuestionBody {
		padding-bottom: 0;
	}

	.Skin .MC .SAVR span.LabelWrapper,
	.Skin .MC .MAVR span.LabelWrapper {
		width: 90%; //Added to allow long answers to wrap rather than start on line below label.q-radio
	}


} // end if $radio-buttons == T
/* End Radio Buttons */




/* Start Label Styles */

//If radio buttons is FALSE - 
	// hide ALL radio button inputs
	// IE8 bring back just non-MC radio buttons
@if $radio-buttons == F {

	.Skin input[type="radio"],
	.Skin input[type="checkbox"] {
		position: absolute;
		//left: -9999px; //removed for /*new radio position absolute z -1*/ so the quesiton doesn't jump when clicking
		opacity:0;//added for /*new radio position absolute z -1*/ so the quesiton doesn't jump when clicking
		z-index:-1;//added for /*new radio position absolute z -1*/ so the quesiton doesn't jump when clicking
		height:0;
		width:0;

		// Bring back native radio buttons and checkboxes for IE8-
		position:relative\9;
		opacity:1\9;
		z-index:1\9;
		height:inherit\9;
		width:inherit\9;	

		//BOOKMARK: MACOL and SACOL questions aren't highlighting the "selected" class in IE8.  Don't know why.  
	}

	.Skin .MC input[type="radio"],
	.Skin .MC input[type="checkbox"] {
		// Hide again (override IE8 styles above) for IE8 on .MC
		position: absolute;
		//left: -9999px; //removed for /*new radio position absolute z -1*/ so the quesiton doesn't jump when clicking
		opacity:0;//added for /*new radio position absolute z -1*/ so the quesiton doesn't jump when clicking
		z-index:-1;//added for /*new radio position absolute z -1*/ so the quesiton doesn't jump when clicking
		height:0;
		width:0;
	}

	@if $border-radius-on == T {
		.Skin .MC .TextEntryBox {
			@include border-radius($default-border-radius);
		}
	}

	.Skin .MC .TextEntryBox {
		padding: 4px;
		margin-top: 8px;

	}
	// To make these look like text entry boxes. Maybe?
	@if $label-style == 1 {
		.Skin .TextEntryBox {
			-webkit-box-shadow: inset 1px 1px 5px #ccc;
			-moz-box-shadow: inset 1px 1px 5px #ccc;
			box-shadow: inset 1px 1px 5px #ccc;
		}
	}


	@media only screen and (min-width: 768px) {
		.Skin .MC .ChoiceStructure {
			border-spacing: $answer-label-spacing;
		}
		//BOOKMARK: Should these be 100% or not?
		@if $full-width-labels-on == F and $radio-buttons == F {
			.Skin .MC .SAVR label.SingleAnswer,
			.Skin .MC .MAVR label.MultipleAnswer,
			.Skin .MC .SAVR .TextEntryBox,
			.Skin .MC .MAVR .TextEntryBox {
				width: 50%;
				margin-left: auto;
				margin-right: auto;
			}
		}
	}

	// /* Centers text entry boxes in spans*/
	.Skin .LabelWrapper {
		text-align: center;
		width: 100%;
	}

	.Skin .MC .SAHR table td,
	.Skin .MC .MAHR table td,
	.Skin .MC li .LabelWrapper {
		margin: 0 auto $answer-label-spacing auto;
	}

	.Skin .MC .SACOL .ChoiceStructure,
	.Skin .MC .MACOL .ChoiceStructure {
		border-spacing: $answer-label-spacing;
	}

	//BOOKMARK: The reason we want this as display: none, is to fix the formatting of MACOL and SACOL questions. 
	// PROBLEM: there is a .ControlContainer in MAHR/SAHR questions that holds an input.  Can't remove or it is unselectable in IE.  
	.Skin .MACOL, .Skin .SACOL {
		.ControlContainer {
			// display: none; // BOOKMARK: Figure out some way to do this without display:none;  (See below) 
		}
	}
	@media only screen and (max-width: 767px) {
		.Skin .MC .MACOL table.ChoiceStructure,
		.Skin .MC .SACOL table.ChoiceStructure {
			border-spacing: 2px; //BOOKMARK: reducing space on column questions so the .ControlContainer doesn't have so much space around it to throw off the formatting
		}
	}
	// /* General label styles */
	.Skin .QuestionBody label.SingleAnswer,
	.Skin .QuestionBody label.MultipleAnswer {
		@if $label-style == 1 {
			background: $answer-label-background;
			border: $answer-label-border;
		} @elseif $label-style == 2 {
			background: $answer-label-background-2;
			border: $answer-label-border-2;
			@if $body-background-image-on == T and $boxed-skincontent == F {
				@if $overlay-dark == T {
					background: #555; // IE Backup
					background: $answer-label-background-2-transparent-light;
				} @elseif $overlay-dark == F {
					background: #EEE; // IE Backup
					background: $answer-label-background-2-transparent-dark;
				}
			}
		}
		// cursor: pointer; BOOKMARK: Do we want this or not?
		transition: background-color .2s ease-in-out;
		padding: 10px 5px;
		@media all and (min-width: 768px) {
			padding: 20px 4%;
		}
		display: block;
		@if $border-radius-on == T {
			@include border-radius($default-border-radius);
		}
		text-align: center;
		&:hover {
			background: $primary-hue-color-light;
			border-color: darken($primary-hue-color-light, 10%);
			@if $body-background-image-on == T and $boxed-skincontent == F {
				@if $label-style == 1 {
					background: transparent;
					border-color: darken($primary-hue-color-light, 20%);
				} @elseif $label-style == 2 {
					@if $overlay-dark == T {
						background: #333; // IE Backup
						background: darken($answer-label-background-2-transparent-light, 30%);
						color: darken($default-text-color, 20%);
					} @elseif $overlay-dark == F {
						background: #DDD; // IE Backup
						background: opacify($answer-label-background-2-transparent-dark, .15);
					}
				}
			}
		}	
		&.q-checked {
			background: $answer-label-select-background;
			border-color: darken($answer-label-select-background, 10%);
			color: $answer-label-select-color;			
		}
	}

	.Skin label.SingleAnswer.q-checked {
		&:hover {
			background: $answer-label-select-background;
			border-color: darken($answer-label-select-background, 10%);
			color: $answer-label-select-color;
		}
	}
	.Skin label.MultipleAnswer.q-checked {
		&:hover {
			//Change color for MultipleAnswer (but not SingleAnswer), because you can click these again.
			background: darken($answer-label-select-background, 5%);
			border-color: darken($answer-label-select-background, 15%);
			color: #fff;
		}
	}

	//BOOKMARK: is this a good idea?
	.Skin label.SingleAnswer.q-checked + input,
	.Skin label.MultipleAnswer.q-checked + input {
		border-color: $primary-color;
	}

	.Skin .SAHR td.LabelContatiner,
	.Skin .MAHR td.LabelContatiner,
	.Skin .SACOL td.LabelContatiner,
	.Skin .MACOL td.LabelContatiner {
		//Aligns the labels when there's a .TextEntryBox
		vertical-align: top;
	}
	//Hide q-radio/checkbox for label questions
	.Skin .MC label.q-radio,
	.Skin .MC label.q-checkbox {
		display: none;
	}
	.Skin .SACOL label.SingleAnswer,
	.Skin .MACOL label.MultipleAnswer {
		//If a single word is too long, it will break rather than spill over
		word-break: break-word; 
	}


} // end if $radio-buttons == F
/* End Label Styles */


// End LABEL STYLES



